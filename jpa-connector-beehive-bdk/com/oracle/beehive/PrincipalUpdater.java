//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.3-hudson-jaxb-ri-2.2.3-3- 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2011.11.08 at 05:31:42 PM PST 
//


package com.oracle.beehive;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for principalUpdater complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="principalUpdater">
 *   &lt;complexContent>
 *     &lt;extension base="{http://www.oracle.com/beehive}baseAccessorUpdater">
 *       &lt;sequence>
 *         &lt;element name="principalType" type="{http://www.oracle.com/beehive}principalType" minOccurs="0"/>
 *         &lt;element name="principalTypeUpdater" type="{http://www.oracle.com/beehive}principalTypeUpdater" minOccurs="0"/>
 *         &lt;element name="sufficientPrincipalsToAdd" type="{http://www.oracle.com/beehive}beeId" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="sufficientPrincipalsToRemove" type="{http://www.oracle.com/beehive}beeId" maxOccurs="unbounded" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "principalUpdater", propOrder = {
    "principalType",
    "principalTypeUpdater",
    "sufficientPrincipalsToAdds",
    "sufficientPrincipalsToRemoves"
})
@XmlSeeAlso({
    DelegatedPrincipalUpdater.class
})
public class PrincipalUpdater
    extends BaseAccessorUpdater
{

    protected PrincipalType principalType;
    protected PrincipalTypeUpdater principalTypeUpdater;
    @XmlElement(name = "sufficientPrincipalsToAdd")
    protected List<BeeId> sufficientPrincipalsToAdds;
    @XmlElement(name = "sufficientPrincipalsToRemove")
    protected List<BeeId> sufficientPrincipalsToRemoves;

    /**
     * Gets the value of the principalType property.
     * 
     * @return
     *     possible object is
     *     {@link PrincipalType }
     *     
     */
    public PrincipalType getPrincipalType() {
        return principalType;
    }

    /**
     * Sets the value of the principalType property.
     * 
     * @param value
     *     allowed object is
     *     {@link PrincipalType }
     *     
     */
    public void setPrincipalType(PrincipalType value) {
        this.principalType = value;
    }

    /**
     * Gets the value of the principalTypeUpdater property.
     * 
     * @return
     *     possible object is
     *     {@link PrincipalTypeUpdater }
     *     
     */
    public PrincipalTypeUpdater getPrincipalTypeUpdater() {
        return principalTypeUpdater;
    }

    /**
     * Sets the value of the principalTypeUpdater property.
     * 
     * @param value
     *     allowed object is
     *     {@link PrincipalTypeUpdater }
     *     
     */
    public void setPrincipalTypeUpdater(PrincipalTypeUpdater value) {
        this.principalTypeUpdater = value;
    }

    /**
     * Gets the value of the sufficientPrincipalsToAdds property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the sufficientPrincipalsToAdds property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getSufficientPrincipalsToAdds().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link BeeId }
     * 
     * 
     */
    public List<BeeId> getSufficientPrincipalsToAdds() {
        if (sufficientPrincipalsToAdds == null) {
            sufficientPrincipalsToAdds = new ArrayList<BeeId>();
        }
        return this.sufficientPrincipalsToAdds;
    }

    /**
     * Gets the value of the sufficientPrincipalsToRemoves property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the sufficientPrincipalsToRemoves property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getSufficientPrincipalsToRemoves().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link BeeId }
     * 
     * 
     */
    public List<BeeId> getSufficientPrincipalsToRemoves() {
        if (sufficientPrincipalsToRemoves == null) {
            sufficientPrincipalsToRemoves = new ArrayList<BeeId>();
        }
        return this.sufficientPrincipalsToRemoves;
    }

}
